name: build
run-name: Build and Unit Tests


on:
  pull_request:
    branches:
      - main
  workflow_call: 
    

jobs:
  build:
    environment: live
    env:
      GRAFANA_ACCESS_POLICY_TOKEN: ${{ secrets.GRAFANA_ACCESS_POLICY_TOKEN }}
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Node.js environment
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4.1.0
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Remove tools directory
        run: rm -rf tools

      - name: Install dependencies
        run: yarn install --immutable --prefer-offline

      - name: Check types
        run: yarn typecheck

      - name: Lint
        run: yarn lint

      - name: Unit tests
        run: yarn test:ci

      - name: Build frontend
        run: yarn build

      - name: Check for backend
        id: check-for-backend
        run: |
          if [ -f "Magefile.go" ]
          then
            echo "has-backend=true" >> $GITHUB_OUTPUT
          fi

      - name: Setup Go environment
        if: steps.check-for-backend.outputs.has-backend == 'true'
        uses: actions/setup-go@41dfa10bad2bb2ae585af6ee5bb4d7d973ad74ed # v5.1.0
        with:
          go-version: '1.23'

      - name: Test backend
        if: steps.check-for-backend.outputs.has-backend == 'true'
        uses: magefile/mage-action@6a5dcb5fe61f43d7c08a98bc3cf9bc63c308c08e # v3
        with:
          version: latest
          args: coverage

      - name: Build backend
        if: steps.check-for-backend.outputs.has-backend == 'true'
        uses: magefile/mage-action@6a5dcb5fe61f43d7c08a98bc3cf9bc63c308c08e # v3
        with:
          version: latest
          args: build

      - name: Executable permissions
        run: chmod -R +x dist/gpx_*
        if: steps.check-for-backend.outputs.has-backend == 'true'

      # - name: Sign
      #   run: yarn sign

      - name: Sign
        run: |
          export GRAFANA_ACCESS_POLICY_TOKEN="glc_eyJvIjoiMTUxMzA3MyIsIm4iOiJwZGYtcmVwb3J0ZXItcGRmLXJlcG9ydGVyIiwiayI6IkRMaG0wVjU0YnI2bU00MjU0dDRFdDZEbCIsIm0iOnsiciI6InVzIn19"
          # Store the length in a variable
          token_length=${#GRAFANA_ACCESS_POLICY_TOKEN}
          # Print the length (but NOT the token)
          echo "The GRAFANA_ACCESS_POLICY_TOKEN is ${token_length} characters long." 

          npx --yes @grafana/sign-plugin@latest --rootUrls http://localhost:3000,https://localhost:3000

      - name: Upload build artifacts
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: build-artifacts
          path: dist
          retention-days: 1

      - name: List contents of dist directory
        run: ls -F dist/